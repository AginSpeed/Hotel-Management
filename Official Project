char newpass[20],cdate[32][13],word[20];
int m=4;
#include<iostream.h>
#include<conio.h>
#include<stdio.h>
#include<stdlib.h>
#include<fstream.h>
#include<time.h>
#include<iomanip.h>
#include<math.h>
#include<ctype.h>
#include<process.h>
#include<string.h>
void checkout();
void facilities();
void Breakfast();
void Lunch();
void Dinner();
void Snacks();
void Dessert();
void Drinks();
void restfac();
void roomfac();
void loading2();
void main_menu();
void reset();
void Custdata();
void check();
void load();
void choice();
void ad();
void logo(int);
void PrintCircle(int,int);
void show();
void memselection();
void grey(long n)
{
 for(long x=0;x<n;x++)
 {}
}
void delay()
{
 for(long x=0;x<92500;x++)
 {}
}
void delay1()
{
 for(double long x=0;x<725000;x++)
 {}
}
void delay2()
{
 for(double long x=0;x<925000;x++)
 {}
}
void slow()
{
 for(long x=0;x<525000;x++)
 {}
}
void stop()
{
 for(long x=0;x<99999999;x++)
 {}
}
struct date
{
 int room_no;
 char mon[12][31];
}D;
struct food
{
 char foodname[30];
 int price;
}F;
class Room
{
 int roomno;
 char roomtype[20];
 int ac;
 float fare;
 public:
	int retroom()
	{
	 return roomno;
	}
	int retfare()
	{
	 return fare;
	}
	void show(int y)
	{
	 gotoxy(3,y);
	 cout<<roomno;
	 gotoxy(25,y);
	 cout<<roomtype;
	 gotoxy(45,y);
	 if(ac==0)
	 cout<<"Non-AC \t";
	 else
	 cout<<"AC \t";
	 gotoxy(70,y);
	 cout<<fare;
	}
	void reset();
}R;
void Room::reset()
{
 ofstream file;
 file.open("Rdata.dat",ios::app | ios::binary);
 for(int i=101;i<=120;i++)
 {
	roomno=i;
	if(roomno>=101 && roomno<=104)
	{
	 strcpy(roomtype,"Single");
	 if(roomno%2==0)
	 {
		ac=0;
		fare=300;
	 }
	 else
	 {
		ac=1;
		fare=450;
	 }
	 file.write((char*)&R,sizeof(R));
	}
	if(roomno>=105 && roomno<=108)
	{
	 strcpy(roomtype,"Double");
	 if(roomno%2==0)
	 {
		ac=0;
		fare=500;
	 }
	 else
	 {
		ac=1;
		fare=600;
	 }
	 file.write((char*)&R,sizeof(R));
	}
	if(roomno>108 && roomno<=112)
	{
	 strcpy(roomtype,"Deluxe");
	 if(roomno%2==0)
	 {
		ac=0;
		fare=550;
	 }
	 else
	 {
		ac=1;
		fare=750;
	 }
	 file.write((char*)&R,sizeof(R));
	}
	if(roomno>112 && roomno<=116)
	{
	 strcpy(roomtype,"Twin Double");
	 ac=1;
	 fare=1500;
	 file.write((char*)&R,sizeof(R));
	}
	if(roomno>116 && roomno<=120)
	{
	 strcpy(roomtype,"King Size");
	 ac=1;
	 fare=2250;
	 file.write((char*)&R,sizeof(R));
	}
 }
}
class Customer
{
 int roomno;
 double tot_fare;
 int sdate,edate,smon,emon;
 char cfname[20],clname[20];
 char gender;
 char nation[20];
 long phno;
 char pass[20];
 int nomember;

 public:
	char* retpass()
	{
	 return pass;
	}
	char* retname()
	{
	 return cfname;
	}
	int retsdate()
	{
	 return sdate;
	}
	int retedate()
	{
	 return edate;
	}
	int retsmon()
	{
	 return smon;
	}
	int retemon()
	{
	 return emon;
	}
	int retroom();
	void retddate();
	void getinfo(int,int,int,int,int);
	void dispdata(int y)
	{
	 gotoxy(3,y);
	 cout<<roomno;
	 gotoxy(15,y);
	 cout<<cfname<<" "<<clname;
	 gotoxy(38,y);
	 cout<<gender;
	 gotoxy(48,y);
	 cout<<sdate+1<<'/'<<smon+1<<'-'<<edate+1<<'/'<<emon+1;
	 gotoxy(63,y);
	 cout<<tot_fare;
	 gotoxy(75,y);
	 cout<<nomember;
	}
	void show();
}C;
void Customer::show()
{
	 gotoxy(1,10);
	 cout<<"Customer Name       :"<<cfname<<" "<<clname<<endl;
	 cout<<"Room Number         :"<<roomno<<endl;
	 cout<<"Date of Reservation :"<<sdate+1<<'/'<<smon+1<<'-'<<edate+1<<'/'<<emon+1<<endl;
	 cout<<"Gender              :";
	 if(gender=='m' || gender=='M')
	 cout<<"Male";
	 else
	 cout<<"Female";
	 cout<<endl;
	 cout<<"Phone Number        :"<<phno<<endl;
	 cout<<"Nationality         :"<<nation<<endl;
	 cout<<"No of members       :"<<nomember<<endl;
	 cout<<"Password            :"<<pass[0];
	 for(int i=1;pass[i]!='\0';i++)
	 cout<<'*';
	 cout<<'\b'<<pass[i-1]<<endl;
	 cout<<"Total Fare          :"<<tot_fare;
}
int Customer::retroom()
{
 return roomno;
}
void Customer::getinfo(int rno,int sdate1,int edate1,int smon1,int emon1)
{
 roomno=rno;
 sdate=sdate1;
 edate=edate1;
 smon=smon1;
 emon=emon1;
 int k=0,fare,days;
 roomno=rno;
 cout<<"The Room number is                 :"<<roomno<<endl;
 gotoxy(1,3);
 cout<<"Enter the Customer First Name      :";
 gotoxy(1,5);
 cout<<"Enter the Customer Last Name       :";
 gotoxy(1,7);
 cout<<"Enter the Gender of the Customer   :";
 gotoxy(1,9);
 cout<<"Enter the Number of Customers      :";
 gotoxy(1,11);
 cout<<"Enter the Nationality              :";
 gotoxy(1,13);
 cout<<"Enter the Phone number             :";
 gotoxy(1,15);
 cout<<"Enter the password                 :";
 gotoxy(37,3);
 gets(cfname);
 gotoxy(37,5);
 gets(clname);
 gagain:
 gotoxy(37,7);
 cin>>gender;
 if(gender=='M' || gender=='m' || gender=='F' || gender=='f')
 {
	gotoxy(37,9);
	cin>>nomember;
	gotoxy(37,11);
	gets(nation);
	gotoxy(37,13);
	cin>>phno;
	gotoxy(37,15);
	gets(pass);
	ifstream fileR;
	fileR.open("Rdata.dat",ios::in | ios::binary);
	while(fileR.read((char*)&R,sizeof(R)))
	{
	 if(rno==R.retroom())
	 {
		fare=R.retfare();
		if(sdate<=edate)
		{
		 days=(edate-sdate)+1;
		 tot_fare=fare*days;
		}
		if(sdate>edate)
		{
		 days=(31-sdate);
		 days+=edate;
		 days+=1;
		 tot_fare=fare*days;
		}
	 }
	}
 }
 else
 {
	gotoxy(37,7);
	cout<<" ";
	goto gagain;
 }
}
void login()
{
 randomize();
 for(int k=12,i=13;k>=1,i<=25;k--,i++)
 for(int j=40,l=41;j>=1,l<=79;j--,l++)
 {
	gotoxy(j,k);
	cout<<random(9);
	gotoxy(l,k);
	cout<<random(9);
	gotoxy(j,i);
	cout<<random(9);
	gotoxy(l,i);
  cout<<random(9);
	slow();
 }
 for(i=12,j=13;i>=1,j<26;i--,j++)
 {
  gotoxy(1,i);
  cout<<"";
	gotoxy(79,j);
	cout<<"";
	delay2();
 }
 for(i=0,j=79;i<80,j>=1;i++,j--)
 {
  gotoxy(i,1);
	cout<<"";
	gotoxy(j,25);
	cout<<"";
	delay1();
 }
 for(i=1,j=25;i<13,j>12;i++,j--)
 {
	gotoxy(1,j);
	cout<<"";
	gotoxy(79,i);
	cout<<"";
	delay2();
 }
 stop();
 for(i=2;i<=78;i++)
 {
	for(j=2;j<=24;j++)
  {
	 gotoxy(i,j);
	 if(j==3 || j==9)
	 {
		if(i==24 || i==30 || i==32 || i==33 || i==34 || i==35 || i==36 || i==37 || i==38)
		cout<<"";
    if(i==43 || i==48 || i==49 || i==50 || i==51 || i==52 || i==53)
    cout<<"";
		if(i==54 || i==56)
		cout<<"";
		if(j==3)
		{
		 if(i==40 || i==41 || i==42 || i==44 || i==45 || i==46)
		 {
	 cout<<"";
		 }
		}
		if(j==9)
		{
     if(i==39 || i==40 || i==41 || i==42 || i==44 || i==45 || i==46)
		 {
			cout<<" ";
	}
		 if(i==57 || i==58 || i==59 || i==60 || i==61 || i==62)
	{
	 cout<<"";
		 }
		 else
		 cout<<" ";
    }
		else
    cout<<" ";
   }
	 else if(j==4 || j==5 || j==7 || j==8)
	 {
		if(i==24 || i==30 || i==32 || i==38 || i==43 || i==48 || i==56)
		{
	cout<<"";
		}
		else
		cout<<" ";
	 }
	 else if(j==6)
	 {
		if(i==24 || i==25 || i==26 || i==27 || i==28 || i==29 || i==30 || i==32 || i==38 || i==43 || i==48)
		{
		 cout<<"";
		}
		if(i==49 || i==50 || i==51 || i==52 || i==56)
		{
		 cout<<"";
		}
		else
    cout<<" ";
   }
	 else if(j==12)
   {
    if(i==36)
    cout<<"W";
		if(i==37 || i==42)
		cout<<"E";
		if(i==38)
		cout<<"L";
		if(i==39)
    cout<<"C";
		if(i==40 || i==45)
		cout<<"O";
		if(i==41)
		cout<<"M";
		if(i==44)
		cout<<"T";
		else
		cout<<" ";
	 }
	 else if(j==13)
	 {
		if(i==33)
		cout<<"H";
		if(i==34)
		cout<<"O";
		if(i==35 || i==48)
		cout<<"T";
		if(i==36 || i==44 || i==46)
		cout<<"E";
		if(i==37)
		cout<<"L";
		if(i==39 || i==45)
		cout<<"M";
		if(i==40 || i==42)
		cout<<"A";
		if(i==41 || i==47)
		cout<<"N";
		if(i==43)
		cout<<"G";
		else
		cout<<" ";
	 }
	 else
	 cout<<" ";
  }
  grey(4250000);
	gotoxy(36,11);
 }
 stop();
 stop();
 stop();
 stop();
 clrscr();
 for( i=12,j=13;i>=1,j<26;i--,j++)
 {
	gotoxy(1,i);
	cout<<"";
	gotoxy(79,j);
	cout<<"";
 }
 for(i=0,j=79;i<80,j>=1;i++,j--)
 {
	gotoxy(i,1);
	cout<<"";
	gotoxy(j,25);
	cout<<"";
 }
 for(i=1,j=25;i<13,j>12;i++,j--)
 {
	gotoxy(1,j);
	cout<<"";
	gotoxy(79,i);
	cout<<"";
 }
}
void entry()
{
 ifstream file;
 file.open("Pass1.txt");
 file>>newpass;
 gotoxy(2,3);
 for(int i=2;i<79;i++)
 cout<<"_";
 gotoxy(33,2);
 cout<<"PLEASE LOGIN"<<endl;
 stop();
 stop();
 gotoxy(10,12);
 cout<<"CUSTOMER";
 gotoxy(30,12);
 cout<<"RECEIPTIONIST";
 gotoxy(50,12);
 cout<<"ADMIN";
 gotoxy(70,12);
 cout<<"EXIT";
 char ch;
 int k=10;
 again:
 gotoxy(k-2,12);
 cout<<">>";
 ch=getch();
 if(ch=='D' || ch=='d')
 {
	k=k+20;
	if(k>70)
	{
	 k=10;
	 gotoxy(68,12);
	 cout<<"  ";
	 goto again;
	}
	else
	{
	 gotoxy(k-22,12);
	 cout<<"  ";
	 goto again;
	}
 }
 if(ch=='A' || ch=='a')
 {
	k=k-20;
	if(k<10)
	{
	 k=70;
	 gotoxy(8,12);
	 cout<<"  ";
	 goto again;
	}
	else
	{
	 gotoxy(k+18,12);
	 cout<<"  ";
	 goto again;
	}
 }
 if(ch==13)
 {
	goto bleh;
 }
 else
 {
	gotoxy(40,24);
	cout<<"Not Possible ";
	grey(12500);
	gotoxy(40,24);
	cout<<"             ";
	goto again;
 }
 bleh:
 clrscr();
 char user[20],pass[20];
 back:
 gotoxy(53,9);
 cout<<" ----------------------- ";
 gotoxy(53,10);
 cout<<"|                       |";
 gotoxy(53,11);
 cout<<"|                       |";
 gotoxy(53,12);
 cout<<"|                       |";
 gotoxy(53,13);
 cout<<"|                       |";
 gotoxy(53,14);
 cout<<"|                       |";
 gotoxy(53,15);
 cout<<"|                       |";
 gotoxy(53,16);
 cout<<" ----------------------- ";
 gotoxy(55,11);
 cout<<"USERNAME: ";
 gotoxy(65,11);
 cout<<"          ";
 gotoxy(55,13);
 cout<<"PASSWORD: ";
 gotoxy(65,13);
 cout<<"          ";
 k=65;
 gotoxy(k,11);
 for(i=0;i<11;i++)
 {
	ch=getch();
	if(ch!=13)
	{
	 if(ch==8)
	 {
		k--;
		if(k<65)
		{
		 k=65;
		 gotoxy(k,11);
		 i=-1;
		}
		else
		{
		 cout<<'\b';
		 i=i-2;
		}
	 }
	 else
	 {
		k++;
		user[i]=ch;
		cout<<ch;
	 }
	}
	else
	{
	 k++;
	 user[i]='\0';
	 break;
	}
 }
 k=65;
 gotoxy(k,13);
 for(i=0;i<11;i++)
 {
	ch=getch();
	if(ch!=13)
	{
	 if(ch==8)
	 {
		k--;
		if(k<65)
		{
		 gotoxy(65,13);
		 k=65;
		 i=-1;
		}
		else
		{
		 cout<<'\b';
		 i=i-2;
		}
	 }
	 else
	 {
		k++;
		pass[i]=ch;
		cout<<".";
	 }
	}
	else
	{
	 pass[i]='\0';
	 break;
	}
 }
	if(strcmpi("agje",user)==0 && strcmp(newpass,pass)==0)
	{
	 load();
	 choice();
	}
	if(strcmpi("agje",user)==0 && strcmp(pass,"fast")==0)
	{
		choice();
	}
	if(strcmpi("agje",user)==0 && strcmp(pass,"reset")==0)
	{
		reset();
		load();
		choice();
	}
	if(strcmpi("admin",user)==0 && strcmp("admin",pass)==0)
	{
		clrscr();
		cout<<"The the admin choice function is under construction";
	}
	if(k==10)
	{
	 int found=0;
	 fstream file1;
	 file1.open("Cdata.dat",ios::in | ios::out | ios::binary);
	 while(file1.read((char*)&C,sizeof(C)))
	 {
		 if(strcmpi(user,C.retname())==0 && strcmpi(pass,C.retpass())==0)
		{
	   found=1;
	   Custdata();
	   exit(0);
		}
	 }
	 if(found==0)
	 {
	  cout<<"Customer Not Found!";
	  goto bleh;
	 }
	}
 else
 {
	m--;
	for(int w=2;w<20;w++)
	for(int z=10;z<18;z++)
	{
	 gotoxy(w,z);
	 cout<<" ";
  }
	if(m>0)
	{
   cout<<'\a';
	 gotoxy(5,9);
	 if(m==3)
	 {
		cout<<"No.of tries remaining!";
    gotoxy(3,10);
		cout<<"          * *   ";
		gotoxy(3,11);
		cout<<"         *   *  ";
		gotoxy(3,12);
    cout<<"             *  ";
    gotoxy(3,13);
		cout<<"            *   ";
		gotoxy(3,14);
		cout<<"             *  ";
		gotoxy(3,15);
    cout<<"         *   *  ";
		gotoxy(3,16);
		cout<<"          * *   ";
	 }
	 if(m==2)
   {
    cout<<"No.of tries remaining!";
		gotoxy(3,10);
		cout<<"                   ";
		gotoxy(3,11);
		cout<<"           * *     ";
		gotoxy(3,12);
		cout<<"          *   *    ";
    gotoxy(3,13);
		cout<<"          *   *    ";
		gotoxy(3,14);
		cout<<"             *     ";
		gotoxy(3,15);
		cout<<"            *      ";
		gotoxy(3,16);
    cout<<"          *****    ";
	 }
	 if(m==1)
	 {
		cout<<"No.of tries remaining!";
		gotoxy(3,10);
    cout<<"                   ";
		gotoxy(3,11);
		cout<<"            *      ";
		gotoxy(3,12);
		cout<<"           **      ";
    gotoxy(3,13);
		cout<<"          * *      ";
		gotoxy(3,14);
    cout<<"            *      ";
		gotoxy(3,15);
		cout<<"            *      ";
		gotoxy(3,16);
		cout<<"           ***     ";
	 }
	 goto back;
	}
	if(m==0)
	{
	 clrscr();
	 gotoxy(30,12);
	 cout<<"Sorry Authorized Entry only!";
	 stop();
	 stop();
	 stop();
	 clrscr();
	 gotoxy(35,12);
	 cout<<"Have a nice day!";
	}
 }
}
void main()                                                        //The main
{
 //login();
 entry();
}

void load()
{
 clrscr();
 gotoxy(30,12);
 cout<<" __________________________ ";
 gotoxy(30,13);
 cout<<"|                          |";
 gotoxy(30,14);
 cout<<" -------------------------- ";
 int k=31;
 for(int i=0;i<101;i++)
 {
	for(int j=0;j<10;j++)
  {
	 if(i<100)
	 {
		gotoxy(42,15);
		cout<<i<<"."<<j<<" %";
    slow();
	 }
	 else
	 {
		gotoxy(42,15);
		cout<<i<<".0 %";
	 }
	}
  if(i%4==0)
  {
	 gotoxy(k,13);
	 cout<<"";
	 k++;
	}
 }
 clrscr();
 int b=1;
 char a;
 gotoxy(1,23);
 for(i=0;i<80;i++)
 cout<<"_";
 gotoxy(1,24);
 cout<<"***************************|PRESS ENTER TO CONTINUE|***************************";
 while(b)
 {
	if(kbhit())
	{
	 a=getch();
	 if(a==13)
	 break;
	}
	if(b<5)
	{
	 gotoxy(33,12);
	 cout<<"Loading...";
	 PrintCircle(38,12);
	}
	else
	{
	 gotoxy(33,12);
   cout<<"System Loaded!";
	 PrintCircle(38,12);
	}
	b++;
 }
}
void ad()
{
 for(int a=8;a<26;a++)
 for(int b=3;b<78;b++)
 {
	gotoxy(b,a);
	cout<<" ";
 }
 gotoxy(1,12);
 cout<<"4";
 gotoxy(79,12);
 cout<<"6";
 gotoxy(43,3);
 cout<<"SEARCH";
 gotoxy(50,2);
 cout<<"    ";
 gotoxy(50,3);
 cout<<"                     ";
 gotoxy(50,4);
 cout<<" ''   ";
 gotoxy(50,5);
 cout<<"                      ''  ";
}
void choice()                                      //RECEIPTIONIST Choice
{
 first:
 remove("SEPARATE.dat");
 clrscr();
 for(int d=1;d<80;d++)
 {
	gotoxy(d,1);
	cout<<"*";
 }
 for(d=1;d<80;d++)
 {
	gotoxy(d,7);
	cout<<"*";
 }
 for(d=1;d<8;d++)
 {
	gotoxy(1,d);
	cout<<"*";
	gotoxy(79,d);
	cout<<"*";
 }
 char choice[20][20];
 strcpy(choice[0],"CHECK IN");
 strcpy(choice[1],"ALL FACILITIES");
 strcpy(choice[2],"CHECK OUT");
 strcpy(choice[3],"MODIFY");
 strcpy(choice[4],"DISPLAY");
 strcpy(choice[5],"REFRESH");
 strcpy(choice[6],"CHANGE PASSWORD");
 strcpy(choice[7],"RESTART PROGRAM");
 strcpy(choice[8],"EXIT");
 int x=0;
 char bb,theword[20][20];
 ad();
 thetime:
 gotoxy(35,16);
 cout<<choice[x];
 logo(x);
 struct tm *ptr;
 time_t t;
 t=time(NULL);
 char str[100];
 ptr=localtime(&t);
 gotoxy(7,3);
 strftime(str,100,"%A %B ",ptr);
 cout<<str<<ptr->tm_year+1900;
 gotoxy(11,4);
 cout<<ptr->tm_mday<<"-"<<ptr->tm_mon+1<<"-"<<ptr->tm_year+1900;
 gotoxy(30,4);
 strftime(str,100,"%I:%M:%S %p",ptr);
 cout<<str;
 w:
	gotoxy(31,16);
	cout<<"->>";
 if(!kbhit())
 {
	goto thetime;
 }
 else
 {
	gotoxy(34,16);
	bb=getch();
	if(bb==52)
	{
	 x--;
	 if(x<0)
	 {
		ad();
		x=7;
		gotoxy(35,16);
		cout<<choice[x];
		logo(x);
		goto w;
	 }
	 else
	 {
		ad();
		gotoxy(35,16);
		cout<<choice[x];
		logo(x);
		goto w;
	 }
	}
	else if(bb==54)
	{
	 x++;
	 if(x>7)
	 {
		ad();
		x=0;
		gotoxy(35,16);
		cout<<choice[x];
		logo(x);
		goto w;
	 }
	 else
	 {
		ad();
		gotoxy(35,16);
		cout<<choice[x];
		logo(x);
		goto w;
	 }
	}
	else if(bb=='s' || bb=='S')
	{
	 int pos=51;
	 int as=11,l=11;
	 char ch;
	 gotoxy(51,3);
	 ifstream file1;

	 ifstream file2;

	 ofstream file3;

	 ofstream file4;

	 for(int i=0;ch!=13;i++)
	 {
		again:
		gotoxy(pos,3);
		ch=getch();
		if(ch==50 || ch==56)
		{
		 if(ch==50)
		 l++;
		 if(ch==56)
		 l--;
		 if(l<11)
		 {
			l=11;
			gotoxy(28,l-1);
			cout<<"  ";
			gotoxy(28,l+1);
			cout<<"  ";
			gotoxy(28,l);
			cout<<">>";
			goto again;
		 }
		 else if(l>=as)
		 {
			l=as-1;
			gotoxy(28,l-1);
			cout<<"  ";
			gotoxy(28,l+1);
			cout<<"  ";
			gotoxy(28,l);
			cout<<">>";
			goto again;
		 }
		 else
		 {
			gotoxy(28,l-1);
			cout<<"  ";
			gotoxy(28,l+1);
			cout<<"  ";
			gotoxy(28,l);
			cout<<">>";
			goto again;
		 }
		}
		if(ch==27)
		goto first;
		if(ch!=13)
		{
		 as=11;
		 l=11;
		 if(ch==8)
		 {
			pos--;
			if(pos<51)
			{
			 pos=51;
			 gotoxy(pos,3);
			 i=-1;
			}
			else
			{
			 cout<<'\b';
			 i=i-2;
			}
		 }
		 else
		 {
			pos++;
			cout<<ch;
			gotoxy(68,11);
			cout<<"Nativate";
			gotoxy(69,12);
			cout<<"Using";
			gotoxy(79,12);
			cout<<" ";
			gotoxy(67,13);
			cout<<"/'\\     |";
			gotoxy(67,14);
			cout<<"8|      |2";
			gotoxy(67,15);
			cout<<" |     \\./";
			for(int a=8;a<24;a++)
			for(int b=1;b<60;b++)
			{
			 gotoxy(b,a);
			 cout<<" ";
			}
			if(i==0)
			{
			 file1.open("Cdata.dat",ios::in | ios::binary);
			 file3.open("SEPARATE.dat",ios::app | ios::binary);
			 while(file1.read((char*)&C,sizeof(C)))
			 {
				strcpy(word,C.retname());
				if(toupper(word[i])==ch || tolower(word[i])==ch)
				{
				 gotoxy(30,as);
				 cout<<word;
				 strcpy(theword[as],word);
				 as++;
				 file3.write((char*)&C,sizeof(C));
				}
			 }
			 file3.close();
			 file1.close();
			}
			if(i>=1)
			{
			 file4.open("done.dat",ios::app | ios::binary);
			 file2.open("SEPARATE.dat",ios::in | ios::binary);
			 while(file2.read((char*)&C,sizeof(C)))
			 {
				strcpy(word,C.retname());
				if(toupper(word[i])==ch || tolower(word[i])==ch)
				{
				 gotoxy(30,as);
				 cout<<word;
				 strcpy(theword[as],word);
				 as++;
				 file4.write((char*)&C,sizeof(C));
				}
			 }
			 file4.close();                               //Doesnt matter if the closing is after or b4 the remove and rename
			 file2.close();
			 remove("SEPARATE.dat");
			 rename("done.dat","SEPARATE.dat");
			}
		 }
		}
		else
		{
		 for(int a=8;a<24;a++)
		 for(int b=1;b<80;b++)
		 {
			gotoxy(b,a);
			cout<<" ";
		 }
		 ifstream fileC;
		 fileC.open("Cdata.dat",ios::in | ios::binary);
		 while(fileC.read((char*)&C,sizeof(C)))
		 {
			if(strcmpi(C.retname(),theword[l])==0)
			{
			 C.show();
			}
		 }
		 retry:
		 ch=getch();
		 if(ch==27)
		 goto first;
		 else
		 {
			gotoxy(35,24);
			cout<<"Not Possible";
			goto retry;
		 }
		}
	 }
	}
	else if(bb==13)
	{
	 if(x==0)                                                      //The GROUPS
	 {
		clrscr();
		int rno,check=0,found=0,k,sdate,edate,smon,emon;
		cout<<"Enter the room number ";
		cin>>rno;
		if(rno>=121 || rno<=100)
		{
		 cout<<"Sorry, That Room does not exist!";
		 getch();
		 goto first;
		}
		dagain:
		gotoxy(1,3);
		cout<<" ";
		gotoxy(16,3);
		cout<<" ";
		gotoxy(1,5);
		cout<<" ";
		gotoxy(16,5);
		cout<<" ";
		gotoxy(1,3);
		cout<<"Starting Date:    |    | 2015 ";
		gotoxy(16,3);
		cin>>sdate;
		sdate-=1;
		gotoxy(21,3);
		cin>>smon;
		smon-=1;

		gotoxy(1,5);
		cout<<"Ending Date  :    |    | 2015";
		gotoxy(16,5);
		cin>>edate;
		edate-=1;
		gotoxy(21,5);
		cin>>emon;
		emon-=1;

		if(smon>emon || smon<0 || emon<0 || sdate<0 || edate<0 || sdate>30 || edate>30 || smon>11 || emon>11)
		goto dagain;

		long pos;
		fstream fileD;
		fileD.open("Ddata.dat",ios::in | ios::out | ios::binary);

		while(fileD.read((char*)&D,sizeof(D)))
		{
		 pos=fileD.tellg();
		 if(rno==D.room_no)
		 {
			found=1;

			for(int i=0;i<12;i++)
			for(int j=0;j<31;j++)
			cdate[i][j]=D.mon[i][j];

			if(sdate<edate)
			{
			 k=sdate;
			 while(k<=edate)
			 {
				if(cdate[smon][k]=='Y')
				{
				 check=1;
				 break;
				}
				k++;
			 }
			 if(check==1)
			 {
				gotoxy(32,24);
				cout<<"That Room is already Booked";
				getch();
				goto first;
			 }
			 else
			 {
				cout<<"That is a good room for you!";
				getch();
				if(sdate<edate)
				{
				 k=sdate;
				 while(k<=edate)
				 {
					cdate[smon][k]='Y';
					k++;
				 }
				}
				else if(sdate>edate)
				{
				 k=0;
				 while(k<=edate)
				 {
					cdate[emon][k]='Y';
					k++;
				 }
				 k=sdate;
				 while(k<=30)
				 {
					cdate[smon][k]='Y';
					k++;
				 }
				}
				for(int i=0;i<12;i++)
				for(int j=0;j<31;j++)
				D.mon[i][j]=cdate[i][j];
				clrscr();

				ofstream fileC;
				fileC.open("Cdata.dat",ios::app | ios::binary);
				C.getinfo(rno,sdate,edate,smon,emon);

				ynagain1:
				gotoxy(25,22);
				cout<<"Do you want to Save it?(Y/N)";
				char ans;
				ans=getche();
				if(ans=='Y' || ans=='y')
				{
				 fileC.write((char*)&C,sizeof(C));
				 fileD.seekp(pos-sizeof(D));
				 fileD.write((char*)&D,sizeof(D));
				 getch();
				 goto first;
				}
				else if(ans=='N' || ans=='n')
				{
				 gotoxy(25,22);
				 cout<"                                   ";
				 gotoxy(25,22);
				 cout<"Ok not saved!";
				 getch();
				 goto first;
				}
				else
				{
				 goto ynagain1;
				}
			 }
			}
			if(sdate>edate)
			{
			 k=1;
			 while(k<=edate)
			 {
				if(cdate[emon][k]=='Y')
				{
				 check=1;
				 break;
				}
				k++;
			 }
			 k=sdate;
			 while(k<=31)
			 {
				if(cdate[smon][k]=='Y')
				{
				 check=1;
				 break;
				}
				k++;
			 }
			 if(check==1)
			 {
				gotoxy(32,24);
				cout<<"That Room is already Booked";
				getch();
				goto first;
			 }
			 else
			 {
				cout<<"That is a good room for you!";
				getch();
				if(sdate<edate)
				{
				 k=sdate;
				 while(k<=edate)
				 {
					cdate[smon][k]='Y';
					k++;
				 }
				}
				if(sdate>edate)
				{
				 k=0;
				 while(k<=edate)
				 {
					cdate[emon][k]='Y';
					k++;
				 }
				 k=sdate;
				 while(k<=30)
				 {
					cdate[smon][k]='Y';
					k++;
				 }
				}
				for(int i=0;i<12;i++)
				for(int j=0;j<31;j++)
				D.mon[i][j]=cdate[i][j];

				clrscr();
				ofstream fileC;
				fileC.open("Cdata.dat",ios::app | ios::binary);
				C.getinfo(rno,sdate,edate,smon,emon);

				ynagain2:
				gotoxy(25,22);
				cout<<"Do you want to Save it?(Y/N)";
				char ans;
				ans=getche();
				if(ans=='Y' || ans=='y')
				{
				 fileC.write((char*)&C,sizeof(C));
				 fileD.seekp(pos-sizeof(D));
				 fileD.write((char*)&D,sizeof(D));
				 getch();
				 goto first;
				}
				else if(ans=='N' || ans=='n')
				{
				 gotoxy(25,22);
				 cout<"                                   ";
				 gotoxy(25,22);
				 cout<"Ok not saved!";
				 getch();
				 goto first;
				}
				else
				{
				 goto ynagain2;
				}
			 }
			}
			if(sdate==edate)
			{
			 if(cdate[smon][sdate]=='Y')
			 {
				check=1;
			 }
			 if(check==1)
			 {
				cout<<"That Room is already booked ";
			 }
			 if(check==0)
			 {
				cout<<"That is a good room for you ";
				getch();
				cdate[smon][sdate]='Y';

				clrscr();
				ofstream fileC;
				fileC.open("Cdata.dat",ios::app | ios::binary);
				C.getinfo(rno,sdate,edate,smon,emon);

				ynagain3:
				gotoxy(25,22);
				cout<<"Do you want to Save it?(Y/N)";
				char ans;
				ans=getche();;
				if(ans=='Y' || ans=='y')
				{
				 fileC.write((char*)&C,sizeof(C));
				 fileD.seekp(pos-sizeof(D));
				 for(int i=0;i<12;i++)
				 for(int j=0;j<31;j++)
				 D.mon[i][j]=cdate[i][j];
				 fileD.write((char*)&D,sizeof(D));
				 getch();
				 goto first;
				}
				else if(ans=='N' || ans=='n')
				{
				 gotoxy(25,22);
				 cout<"                                   ";
				 gotoxy(25,22);
				 cout<"Ok not saved!";
				 getch();
				 goto first;
				}
				else
				{
				 goto ynagain3;
				}
			 }
			}
		 }
		}
		if(found==0)
		{
		 cout<<"No room Found!";
		}

	 }
	 if(x==1)
	 {
		facilities();
		goto first;
	 }
	 if(x==2)
	 {
		clrscr();
		checkout();
		goto first;
	 }
	 if(x==3)
	 {
		goto first;
	 }
	 if(x==4)
	 {
		clrscr();
		ifstream file;
		file.open("Cdata.dat",ios::in | ios::binary);
		gotoxy(2,1);
		cout<<"Room No";
		gotoxy(19,1);
		cout<<"NAME ";
		gotoxy(35,1);
		cout<<"GENDER";
		gotoxy(50,1);
		cout<<"DATE";
		gotoxy(62,1);
		cout<<"AMOUNT";
		gotoxy(73,1);
		cout<<"MEMBERS";
		int y=3,z=0;
		char k;
		long pos;
		while(file.read((char*)&C,sizeof(C)))
		{
		 pos=file.tellg();
		 if(y-1<21)
		 C.dispdata(y++);
		 else
		 {
			k=getch();
			if(k=='s' || k=='S')
			{
			 clrscr();
			 z++;
			 y=3;
			 C.dispdata(y++);
			}
			else if(k=='w' || k=='W')
			{
			 if(z>0)
			 {
				clrscr();
				z++;
				y=3;
				file.seekg(pos-20*sizeof(C));
				C.dispdata(y++);
			 }
			}
		 }
		}
		getch();
		goto first;
	 }
	 if(x==5)
	 {
		randomize();
		int j=0,k=0;
		for(int i=0;i<10000;i++)
		{
		j=random(79+1);
		k=random(25+1);
		gotoxy(j,k);
		cout<<"*";;
		delay();
		}
		gotoxy(1,1);
		for(i=0;i<1999;i++)
		{
		 cout<<"*";;
		}
		stop();
    stop();
		stop();
		goto first;
	 }
	 if(x==6)
	 {
		goto first;
	 }
	 if(x==7)
	 {
		goto first;
	 }
	 if(x==8)
	 {
		goto first;
	 }
	}
	else
	{
	 gotoxy(38,24);
	 cout<<"Not Possible";
	 stop();
	 stop();
	 gotoxy(38,24);
	 cout<<"            ";
	 goto w;
	}
	exit(0);
 }
}
void Custdata()
{
 clrscr();
 getch();
 cout<<"correct! But sorry its under construction!";
 getch();
}
void reset()
{
 remove("Bfast.txt");
 remove("Lunch.txt");
 remove("Dinner.txt");
 remove("Snacks.txt");
 remove("Dessert.txt");
 remove("Drinks.txt");
 remove("Cdata.dat");
 remove("Rdata.dat");
 remove("done.dat");
 remove("SEPARATE.dat");
 R.reset();
 fstream file;
 file.open("Ddata.dat",ios::out | ios::in | ios::binary);
 int k=101;
 while(k<121)
 {
	D.room_no=k;
	for(int i=0;i<12;i++)
	 for(int j=0;j<31;j++)
		D.mon[i][j]='N';
	k++;
	file.write((char*)&D,sizeof(D));
 }
 file.close();
 struct food
 {
	char foodname[30];
	int price;
 }F;
 char food[20][30];

 ofstream FileB;
 FileB.open("Bfast.txt",ios::app | ios::binary);
 strcpy(food[0],"Dosa");
 strcpy(food[1],"Idli");
 strcpy(food[2],"Putt");
 strcpy(food[3],"Salt Mango Tree");
 strcpy(food[4],"Bacon");
 strcpy(food[5],"Bhatoora");
 strcpy(food[6],"Poori");
 strcpy(food[7],"Sandwich");
 strcpy(food[8],"Cream Pie");
 strcpy(food[9],"French Toast");
 for(int i=0;i<10;i++)
 {
	strcpy(F.foodname,food[i]);
	F.price=50+random(i);
	FileB.write((char*)&F,sizeof(F));
 }
 FileB.close();

 ofstream FileL;
 FileL.open("Lunch.txt", ios::app | ios::binary);
 strcpy(food[0],"Chicken Biryani");
 strcpy(food[1],"Vegetable Biryani");
 strcpy(food[2],"Fried Rice");
 strcpy(food[3],"Rice");
 strcpy(food[4],"Fish Biryani");
 strcpy(food[5],"Chicken Curry");
 strcpy(food[6],"Chicken Club Twister");
 strcpy(food[7],"Thali");
 strcpy(food[8],"Veggie Frittata");
 strcpy(food[9],"Asparagus Salad");
 for(i=0;i<10;i++)
 {
	strcpy(F.foodname,food[i]);
	F.price=100+random(i);
	FileL.write((char*)&F,sizeof(F));
 }
 FileL.close();

 ofstream FileD;
 FileD.open("Dinner.txt",ios::app | ios::binary);
 strcpy(food[0],"Skewers");
 strcpy(food[1],"Vegetable Chow Mein");
 strcpy(food[2],"Key Lime Pie");
 strcpy(food[3],"Tropical Fruit Bowl");
 strcpy(food[4],"Spaghetti");
 strcpy(food[5],"Chicken Pizza");
 strcpy(food[6],"Vegetable Pizza");
 strcpy(food[7],"Taco Salad");
 strcpy(food[8],"Basil Meatballs");
 strcpy(food[9],"Roasted Chicken");
 for(i=0;i<10;i++)
 {
	strcpy(F.foodname,food[i]);
	F.price=95+random(i);
	FileD.write((char*)&F,sizeof(F));
 }
 FileD.close();

 ofstream FileDe;
 FileDe.open("Dessert.txt",ios::app | ios::binary);
 strcpy(food[0],"Butter Braid");
 strcpy(food[1],"Cool Whip");
 strcpy(food[2],"Apple Cake");
 strcpy(food[3],"Cherry Sheet Cake");
 strcpy(food[4],"Nectarine Tarts");
 strcpy(food[5],"Ice Cream(M/C/S/V/B");
 strcpy(food[6],"Fruit Salad");
 strcpy(food[7],"Pudding");
 strcpy(food[8],"Pie");
 strcpy(food[9],"Carrot Halwa");
 for(i=0;i<10;i++)
 {
	strcpy(F.foodname,food[i]);
	F.price=70+random(i);
	FileDe.write((char*)&F,sizeof(F));
 }
 FileD.close();

 ofstream FileS;
 FileS.open("Snacks.txt",ios::app | ios::binary);
 strcpy(food[0],"Samosa");
 strcpy(food[1],"Banana Fry");
 strcpy(food[2],"Chips");
 strcpy(food[3],"Muffins");
 strcpy(food[4],"Cookies");
 strcpy(food[5],"French Fries");
 strcpy(food[6],"Bread");
 for(i=0;i<7;i++)
 {
	strcpy(F.foodname,food[i]);
	F.price=20+random(i);
	FileS.write((char*)&F,sizeof(F));
 }

 ofstream FileDr;
 FileDr.open("Drinks.txt",ios::app | ios::binary);
 strcpy(food[0],"Tea");
 strcpy(food[1],"Coffee");
 strcpy(food[2],"Water");
 strcpy(food[3],"Cool Drinks");
 strcpy(food[4],"Ice Cream");
 strcpy(food[5],"Energy Drinks");
 strcpy(food[6],"Juice");
 strcpy(food[7],"Milk Shake");
 strcpy(food[8],"Soda");
 strcpy(food[9],"Lime Water");
 for(i=0;i<10;i++)
 {
	strcpy(F.foodname,food[i]);
	F.price=50+random(i);
	FileDr.write((char*)&F,sizeof(F));
 }
 FileDr.close();
}
void logo(int x)
{
		if(x==0)
		{
	 gotoxy(35,8);
	cout<<" _____   ";
	gotoxy(35,9);
	cout<<"| Add |  ";
	gotoxy(35,10);
	cout<<"| Rec |  ";
	gotoxy(35,11);
	cout<<"|     |  ";
	gotoxy(35,12);
	cout<<"|     |  ";
	gotoxy(35,13);
	cout<<"|     +  ";
	gotoxy(35,14);
	cout<<"|___+ + +";
	gotoxy(35,15);
	cout<<"      +  ";

		}
		if(x==2)
		{
	gotoxy(35,8);
	cout<<" _____    ";
	gotoxy(35,9);
	cout<<"| Del |   ";
	gotoxy(35,10);
	cout<<"| Rec |   ";
	gotoxy(35,11);
	cout<<"|     |   ";
	gotoxy(35,12);
	cout<<"|     |   ";
	gotoxy(35,13);
	cout<<"|     |   ";
	gotoxy(35,14);
	cout<<"|     |   ";
	gotoxy(35,15);
	cout<<"|___----- ";
		}
		if(x==1)
		{
	gotoxy(35,8);
	cout<<" ______   ";
	gotoxy(35,9);
	cout<<"| FAC. |  ";
	gotoxy(35,10);
	cout<<"|*.... |  ";
	gotoxy(35,11);
	cout<<"|*.... |  ";
	gotoxy(35,12);
	cout<<"|*... ??  ";
	gotoxy(35,13);
	cout<<"|*...?  ? ";
	gotoxy(35,14);
	cout<<"|_____ ?  ";
	gotoxy(35,15);
	cout<<"       *  ";

		}
		if(x==3)
		{
	gotoxy(35,8);
	cout<<" ______    ";
	gotoxy(35,9);
	cout<<"| MOD. |   ";
	gotoxy(35,10);
	cout<<"| REC. |   ";
	gotoxy(35,11);
	cout<<"|      |   ";
	gotoxy(35,12);
	cout<<"|      /~/ ";
	gotoxy(35,13);
	cout<<"|     / /  ";
	gotoxy(35,14);
	cout<<"|____/ /   ";
	gotoxy(35,15);
	cout<<"     L/    ";

		}
		if(x==4)
		{
	gotoxy(35,8);
	cout<<" _____ ";
	gotoxy(35,9);
	cout<<"|*....|";
	gotoxy(35,10);
	cout<<"|*....|";
	gotoxy(35,11);
	cout<<"|*....|";
	gotoxy(35,12);
	cout<<"|*....|";
	gotoxy(35,13);
	cout<<"|*....|";
	gotoxy(35,14);
	cout<<"|*....|";
	gotoxy(35,15);
	cout<<"|_____|";
		}
		if(x==5)
		{
	gotoxy(35,8);
	cout<<" ______    ";
	gotoxy(35,9);
	cout<<"|*.... |   ";
	gotoxy(35,10);
	cout<<"|*.... |   ";
	gotoxy(35,11);
	cout<<"|*.... |   ";
	gotoxy(35,12);
	cout<<"|*.. .>.   ";
	gotoxy(35,13);
	cout<<"|*. '   '  ";
	gotoxy(35,14);
	cout<<"|___'   '  ";
	gotoxy(35,15);
	cout<<"     '<'   ";
		}
		if(x==6)
		{
	gotoxy(35,8);
	cout<<"   ********* ";
	gotoxy(35,9);
	cout<<"   *CHANGE * ";
	gotoxy(35,10);
	cout<<"    * PASS*  ";
	gotoxy(35,11);
	cout<<"     *...*   ";
	gotoxy(35,12);
	cout<<"       T     ";
	gotoxy(35,13);
	cout<<"       I     ";
	gotoxy(35,14);
	cout<<"       I     ";
	gotoxy(35,15);
	cout<<"       !     ";

		}
		if(x==7)
		{
		 gotoxy(35,9);
		 cout<<"   <Restart<   ";
		 gotoxy(35,10);
		 cout<<" \\/         /\\ ";
		 gotoxy(35,11);
		 cout<<" \\/         /\\ ";
		 gotoxy(35,12);
		 cout<<"  >>>>>>>>>>>  ";
		}
		if(x==8)
		{
		}
		if(x==9)
		{
		}
}
void PrintCircle(int centx , int centy)
{
	struct circval
	{
		int xpos;
		int ypos;
	};

	circval values[]={{0,7},{1,7},{2,7},{3,7},{7,6},{9,5},{11,4},{12,3},{13,1},{13,0}};
	int v,signx,signy,val;

	for(int i=0;i<=1;i++)
	{
		signx=pow(-1,i);
		for(int j=0;j<=1;j++)
		{
			signy=signx*pow(-1,j+1);
			for(v=0;v<=9;v++)
			{
				if(signx!=signy)
				val=v;
				else if(signx==signy)
				val=9-v;

				gotoxy(centx+signx*values[val].xpos,centy+signy*values[val].ypos);
				cout<<"*";
				gotoxy(centx-signx*values[val].xpos,centy-signy*values[val].ypos);
				cout<<"";
				grey(5000000*pow(1.15,-signy*(9-val)));
			}
		}

	}

}
void show()
{
 fstream fileD;
 fileD.open("Ddata.dat",ios::out|ios::in|ios::binary);
 int k=101;
	while(fileD.read((char*)&D,sizeof(D)))
	{
	 cout<<D.room_no<<endl;
	 for(int i=0;i<12;i++)
	 {
		for(int j=0;j<31;j++)
		{
	cout<<D.mon[i][j];
		}
		cout<<endl;
	 }
	 getch();
 }
}
void loading2()
{
 randomize();
 clrscr();
 gotoxy(31,13);
 cout<<"LOADING...";
 gotoxy(29,15);
 cout<<"|";
 gotoxy(29,14);
 cout<<" ___________";
 gotoxy(29,16);
 cout<<" -----------";
 gotoxy(41,15);
 cout<<"|";
 int q=random(4)+1;
 for(int j=0;j<q;j++)
 for(int i=30;i<=40;i++)
 {
	if(i>30 && i<40)
	{
	 gotoxy(i-1,15);
	 cout<<" ";
	 gotoxy(i,15);
	 cout<<"*";
	 gotoxy(i+1,15);
	 cout<<"*";
	 grey(10000000);
	}
	if(i==40)
	{
	 gotoxy(i-1,15);
	 cout<<" ";
	 gotoxy(i,15);
	 cout<<" ";
	 grey(10000000);
	}
 }
 clrscr();
}
void roomfac()             //diplay room facilities
{
 int i=0;
 clrscr();
 cout<<"Room Facilities"<<endl;
 gotoxy(2,2);
 cout<<"Room No.";
 gotoxy(24,2);
 cout<<"Room Type";
 gotoxy(43,2);
 cout<<"AC/ Non-AC";
 gotoxy(69,2);
 cout<<"Amount";
 ifstream file;
 file.open("Rdata.dat",ios::in | ios::binary);
 while(file.read((char*)&R,sizeof(R)))
 {
	if(i%4==0)
	getch();
	R.show(i+3);
	cout<<endl;
	i++;
 }
}
void restfac()                  //display restaurent facilities
{
 char ch,c;
 gotoxy(20,0);
 cout<<"-------RESTAURENT FACILITIES-------";
 gotoxy(2,3);
 cout<<"Breakfast";
 gotoxy(2,4);
 cout<<"Lunch";
 gotoxy(2,5);
 cout<<"Dinner";
 gotoxy(2,6);
 cout<<"Snacks";
 gotoxy(2,7);
 cout<<"Dessert";
 gotoxy(2,8);
 cout<<"Drinks";
 gotoxy(30,24);
 cout<<"Press 'M'-Facilities ";
 int r=3;
 gotoxy(1,r);
 cout<<">";
 back:
 ch=getch();
 if(ch=='w' || ch=='W')
 {
	r--;
	if(r<3)
	{
	 gotoxy(1,r+1);
	 cout<<" ";
	 r=8;
	 gotoxy(1,r);
	 cout<<">";
	 goto back;
	}
	else
	{
	 gotoxy(1,r+1);
	 cout<<" ";
	 gotoxy(1,r);
	 cout<<">";
	 goto back;
	}
 }
 else if(ch=='s' || ch=='S')
 {
	r++;
	if(r>8)
	{
	 gotoxy(1,r-1);
	 cout<<" ";
	 r=3;
	 gotoxy(1,r);
	 cout<<">";
	 goto back;
	}
	else
	{
	 gotoxy(1,r-1);
	 cout<<" ";
	 gotoxy(1,r);
	 cout<<">";
	 goto back;
	}
 }
 else if(ch==13)
 {
	if(r==3)
	{
	 clrscr();
	 Breakfast();
	}
	else if(r==4)
	{
	 clrscr();
	 Lunch();
	}
	else if(r==5)
	{
	 clrscr();
	 Dinner();
	}
	else if(r==6)
	{
	 clrscr();
	 Snacks();
	}
	else if(r==7)
	{
	 clrscr();
	 Dessert();
	}
	else if(r==8)
	{
	 clrscr();
	 Drinks();
	}
	gotoxy(20,24);
	cout<<"Press 'M'-Facilities | Press 'B'-Food Menu ";
 }
 else if(ch=='M' || ch=='m')
 {
	facilities();
 }
 c=getch();
 clrscr();
 if(c=='b' || c=='B')
 {
	restfac();
 }
 if(c=='m' || c=='M')
 {
	facilities();
 }
 else
 {
	choice();
 }
}
void Breakfast()
{
 int i=1;
 ifstream file;
 file.open("Bfast.txt",ios::in | ios::binary);
 while(file.read((char*)&F,sizeof(F)))
 {
	gotoxy(1,i+2);
	cout<<F.foodname;
	gotoxy(50,i+2);
	cout<<F.price;
	i++;
 }
 file.close();
}
void Lunch()
{
 int i=1;
 ifstream file;
 file.open("Lunch.txt",ios::in | ios::binary);
 while(file.read((char*)&F,sizeof(F)))
 {
	gotoxy(1,i+2);
	cout<<F.foodname;
	gotoxy(50,i+2);
	cout<<F.price;
	i++;
 }
 file.close();
}
void Dinner()
{
 int i=1;
 ifstream file;
 file.open("Dinner.txt",ios::in | ios::binary);
 while(file.read((char*)&F,sizeof(F)))
 {
	gotoxy(1,i+2);
	cout<<F.foodname;
	gotoxy(50,i+2);
	cout<<F.price;
	i++;
 }
 file.close();
}
void Dessert()
{
 int i=1;
 ifstream file;
 file.open("Dessert.txt",ios::in | ios::binary);
 while(file.read((char*)&F,sizeof(F)))
 {
	gotoxy(1,i+2);
	cout<<F.foodname;
	gotoxy(50,i+2);
	cout<<F.price;
	i++;
 }
 file.close();
}
void Snacks()
{
 int i=1;
 ifstream file;
 file.open("Snacks.txt",ios::in | ios::binary);
 while(file.read((char*)&F,sizeof(F)))
 {
	gotoxy(1,i+2);
	cout<<F.foodname;
	gotoxy(50,i+2);
	cout<<F.price;
	i++;
 }
 file.close();
}
void Drinks()
{
 int i=1;
 ifstream file;
 file.open("Drinks.txt",ios::in | ios::binary);
 while(file.read((char*)&F,sizeof(F)))
 {
	gotoxy(1,i+2);
	cout<<F.foodname;
	gotoxy(50,i+2);
	cout<<F.price;
	i++;
 }
 file.close();
}
void facilities()
{
 clrscr();
 gotoxy(30,1);
 cout<<"--------FACILITIES--------";
 gotoxy(2,3);
 cout<<"ROOM FACILITIES";
 gotoxy(2,4);
 cout<<"RESTAURENTS";
 gotoxy(2,5);
 cout<<"RETURN";
 char ch;
 int k=3;
 gotoxy(1,k);
 cout<<">";
 back:
 ch=getch();
 if(ch=='w' || ch=='W')
 {
	k--;
	if(k<3)
	{
	 gotoxy(1,k+1);
	 cout<<" ";
	 k=6;
	 gotoxy(1,k);
	 cout<<">";
	 goto back;
	}
	else
	{
	 gotoxy(1,k+1);
	 cout<<" ";
	 gotoxy(1,k);
	 cout<<">";
	 goto back;
	}
 }
 else if(ch=='s' || ch=='S')
 {
	k++;
	if(k>5)
	{
	 gotoxy(1,k-1);
	 cout<<" ";
	 k=3;
	 gotoxy(1,k);
	 cout<<">";
	 goto back;
	}
	else
	{
	 gotoxy(1,k-1);
	 cout<<" ";
	 gotoxy(1,k);
	 cout<<">";
	 goto back;
	}
 }
 else if(ch==13)
 {
	clrscr();
	if(k==3)
	{
	 loading2();
	 roomfac();
	}
	else if(k==4)
	{
	 loading2();
	 restfac();
	}
	else if(k==5)
	{
	 choice();
	}
 }
 gotoxy(20,25);
 cout<<"Press 'B'-Facility | Else-Main Menu";
 ch=getch();
 if(ch=='b' || ch=='B')
 facilities();
 else
 return;
}
void checkout()
{
 int sdate,edate,smon,emon,k;
 long pos;
 clrscr();
 int found=0;
 char name[20],pass[20],ans;
 int rno;
 clrscr();
 cout<<"Enter the Room no  :";
 cin>>rno;
 cout<<"Enter the Name     :";
 gets(name);
 cout<<"Enter the Password :";
 gets(pass);
 fstream FileD;
 FileD.open("Ddata.dat",ios::in | ios::out | ios::binary);
 fstream FileC;
 FileC.open("Cdata.dat",ios::in | ios::out | ios::binary);
 ofstream FileT;
 FileT.open("Ctemp.dat",ios::app | ios::binary);
 while(FileC.read((char*)&C,sizeof(C)))
 {
	if(C.retroom()==rno)
	if(strcmpi(C.retname(),name)==0 )
	if(strcmpi(C.retpass(),pass)==0)
	{
	 found=1;
	 C.show();
	 cout<<endl<<"Confirm Deletion? ";
	 ans=getche();
	 if(ans=='y' || ans=='Y')
	 {
		sdate=C.retsdate();
		edate=C.retedate();
		smon=C.retsmon();
		emon=C.retemon();
		FileC.seekg(0);
		while(FileC.read((char*)&C,sizeof(C)))
		{
		 if(strcmp(C.retname(),name)!=0)
		 {
			if(C.retroom()!=rno)
			FileT.write((char*)&C,sizeof(C));
		 }
		 else
		 {
			if(C.retroom()==rno)
			{
			 for(int i=0;i<12;i++)
			 for(int j=0;j<31;j++)
			 cdate[i][j]=D.mon[i][j];
			 while(FileD.read((char*)&D,sizeof(D)))
			 {
				pos=FileD.tellg();
				if(D.room_no==rno)
				{
				 if(sdate<edate)
				 {
					k=sdate;
					while(k<=edate)
					{
						cdate[smon][k]='N';
						k++;
					}
				 }
				 else if(sdate>edate)
				 {
					k=0;
					while(k<=edate)
					{
					 cdate[emon][k]='N';
					 k++;
					}
					k=sdate;
					while(k<=30)
					{
						cdate[smon][k]='N';
						k++;
					}
				 }
				 for(int i=0;i<12;i++)
				 for(int j=0;j<31;j++)
				 D.mon[i][j]=cdate[i][j];
				 FileD.seekp(pos-sizeof(D));
				 FileD.write((char*)&D,sizeof(D));
				}
			 }
			}
		 }
		}
		cout<<endl<<endl<<'\t'<<"Room Vacated!";
		remove("Cdata.dat");
		rename("Ctemp.dat","Cdata.dat");
	 }
	 else
	 {
		cout<<endl<<"Room Not Vacated";
		cout<<endl<<'\t'<<'\t';
		cout<<"Do you wish to Vacate Another Room";
		ans=getche();
		if(ans=='y' || ans=='Y')
		checkout();
		else
		choice();
	 }
	}
 }
 if(found==0)
 {
	cout<<"Unidentified Room/Name/Pass";
	cout<<"Do you wish to Vacate Another Room";
	ans=getche();
	if(ans=='y' || ans=='Y')
	checkout();
	else
	choice();
 }
}
